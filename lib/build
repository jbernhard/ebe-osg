#!/bin/bash


#
# settings
#

# temporary dir for cmake output
BUILDDIR="/dev/shm/$USER/ebe-osg-build"



#
# functions
#

_usage () {
  cat <<EOF
usage: $0 -[hfrv] TARGETS

Compiles and packages ebe-osg.  Default behavior:

  * Runs configuration [CMake] only if necessary.  May be overriden by the -f option.
  * Compiles all targets.
  * Creates a TGZ package.

options:
  -h  display this help message
  -f  force re-run CMake
  -r  repackage  [make package only, no compilation]
  -v  non-quiet build  [show compiler warnings]

For testing purposes, it is possible to compile only certain targets.  TARGETS may be zero or more of
  superMC iSS VISHNew osc2u urqmd

Note that the package will not be built if any targets are specified.
EOF
}

_intel () {
  # try to load Intel compilers on Engage
  if [[ $HOSTNAME == 'engage-submit3.renci.org' ]]; then
    . /etc/profile.d/module.sh
    module load intelc/11.1_072 intelf/11.1_072
  fi

  # compilers should now be in path
  # export env vars; cmake will read them
  hash icpc 2> /dev/null && export CXX=icpc
  hash ifort 2> /dev/null && export FC=ifort
}

_cmake () {
  [[ -d $BUILDDIR ]] && rm -rf $BUILDDIR

  mkdir -p $BUILDDIR || return 1
  cd $BUILDDIR

  cmake -DQUIET=$QUIET $STARTDIR || return 1
}

_make () {
  cd $BUILDDIR

  # number of jobs = number of cores + 1
  NJOB=$(( `getconf _NPROCESSORS_ONLN` + 1 ))

  make -j$NJOB $TARGETS || return 1
}

_package () {
  if [[ -z "$TARGETS" ]]; then
    cd $BUILDDIR

    make package || return 1
    cp -v ebe-osg.tar.gz $STARTDIR
  else
    echo 'targets were specified, packaging skipped'
  fi
}

_full () {
  _intel
  _cmake || return 1
  _make || return 1
  _package || return 1
}




#
# variables
#

# store this for later
STARTDIR=$PWD

# repackage only, don't compile
REPACKAGE=false

# force cmake even if already done
FORCE=false

# show compiler warnings
QUIET=ON




#
# action
#

# read options
while getopts ":hfrv" opt; do
  case $opt in
    h)
      _usage
      exit 0
      ;;
    f)
      FORCE=true
      ;;
    r)
      REPACKAGE=true
      ;;
    v)
      QUIET=OFF
      ;;
    \?)
      echo "invalid option: -$OPTARG"
      _usage
      exit 1
      ;;
  esac
done

# get targets from command line
shift $((OPTIND-1))
TARGETS=$@

# do full build
if $FORCE; then
  _full || exit 1
  exit 0
fi

# package only
if $REPACKAGE; then
  if [[ -d $BUILDDIR ]]; then
    _package || exit 1
  else
    echo "can't make package without a build directory, just do a normal run"
    exit 1
  fi
  exit 0
fi

# default:  cmake if necessary, compile, package
if [[ -d $BUILDDIR ]]; then
  _intel
  _make || exit 1
  _package || exit 1
else
  _full || exit 1
fi
