#!/bin/bash


#
# functions
#

_usage () {
  cat <<EOF
usage: $0 [OPTIONS]

Compiles and packages ebe-osg.  Default behavior:

  * Creates build directory and runs CMake configuration.
  * Compiles all targets.
  * Creates a TGZ package.

Options:
  -h             Display this help message and exit.
  -b BUILDDIR    Set the CMake build directory -- default $BUILDDIR.  Will be created if necessary.
  -c             Clear CMake build directory before starting build.
  -d             Dynamic linking -- static linking is default.
  -q             Quiet build -- hide compiler warnings.
EOF
}


_make () {
  # try to load Intel compilers on OSG hosts
  if [[ $HOSTNAME == 'osg-xsede.grid.iu.edu' ]]; then
    . /etc/profile.modules
    module load intel/12.1
  elif [[ $HOSTNAME == 'engage-submit3.renci.org' ]]; then
    . /etc/profile.d/module.sh
    module load intel{c,f}/11.1_072
  fi

  # compilers should now be in path
  # export env vars; cmake will read them
  hash icpc 2> /dev/null && export CXX=icpc
  hash ifort 2> /dev/null && export FC=ifort

  # create build dir. if necessary
  [[ -d $BUILDDIR ]] || mkdir -p $BUILDDIR || return 1
  cd $BUILDDIR

  cmake \
    -DCMAKE_BUILD_TYPE=OSG \
    -DQUIET=$QUIET \
    -DSTATIC=$STATIC \
    $LIBDIR || return 1

  # number of jobs = number of cores + 1
  NJOB=$(( `getconf _NPROCESSORS_ONLN` + 1 ))

  make -j$NJOB || return 1
}

_package () {
  cd $BUILDDIR
  make package || return 1
  cp -v ebe-osg.tar.gz $LIBDIR
}




#
# default settings
#

# CMake build dir.
BUILDDIR="/dev/shm/$USER-ebe-osg-build"

# clear build dir
CLEAR=false

# hide compiler warnings
QUIET=OFF

# static linking
STATIC=ON




#
# action
#

# read options
while getopts ":b:hcdq" opt; do
  case $opt in
    b)
      if [[ -z "$OPTARG" ]]; then
        echo "option -b requires an argument"
        exit 1
      else
        BUILDDIR="$OPTARG"
      fi
      ;;
    h)
      _usage
      exit 0
      ;;
    c)
      CLEAR=true
      ;;
    d)
      STATIC=OFF
      ;;
    q)
      QUIET=ON
      ;;
    \?)
      echo "invalid option: -$OPTARG"
      echo
      _usage
      exit 1
      ;;
  esac
done


# location of this script -- needed later
LIBDIR=$( cd "$( dirname "$0" )" && pwd )

# remove build directory if requested
$CLEAR && rm -rf $BUILDDIR

# build and package
_make && _package
